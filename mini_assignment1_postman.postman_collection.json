{
	"info": {
		"_postman_id": "ff05cdaf-2ea3-42d3-9f9f-c0f9b799f7c1",
		"name": "mini_assignment1_postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "getRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.jsonBody;\r",
							"});\r",
							"let Responce = pm.response.json();\r",
							"let userid = 4;\r",
							"pm.test(\"a.\tUser with 'id' 40 has 'userId'=4\",function(){\r",
							"    for(let i=0;i<Responce.length;i++){\r",
							"        if(Responce[i].id==40){\r",
							"            pm.expect(Responce[i].userId).to.eql(userid);\r",
							"        }\r",
							"    }\r",
							"});\r",
							"pm.test(\"b.\tEvery user contains 'title' and its type is String\",function(){\r",
							"    for(let i=0;i<Responce.length;i++){\r",
							"        let Type = Responce[i].title\r",
							"        pm.expect(typeof(Type)).to.eql(\"string\");   \r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{jason_url}}/posts",
					"host": [
						"{{jason_url}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "putRequest",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.jsonBody;\r",
							"});\r",
							"let Responce = pm.response.json();\r",
							"console.log(Responce.name);\r",
							"pm.test(\"verify name and job\",function(){\r",
							"    for(let i=0;i<Responce.length;i++){\r",
							"        pm.expect(Responce.name).to.eql(\"Arun\");\r",
							"        pm.expect(Responce.job).to.eql(\"Manager\");\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\t\r\n    \"name\": \"Arun\",\r\n    \"job\": \"Manager\",\r\n    \"updatedAt\": \"2021-06-11T07:07:25.866Z\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.jsonBody;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "postRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.jsonBody;\r",
							"});\r",
							"pm.test(\"verify successful creation of data\",function(){\r",
							"    var Response = pm.response.json();\r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":{{name}},\r\n    \"job\":{{job}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{reqres_url}}/api/users",
					"host": [
						"{{reqres_url}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		}
	]
}